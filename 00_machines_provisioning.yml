- name: Test playbook
  hosts: localhost
  vars_files:
    - vars/vars.yml

  tasks:
    - name: Another way to call known_hosts
      known_hosts:
        host: "{{ item.value.ip }}" 
        path: ~/.ssh/known_hosts
        state: absent
      loop: "{{ initial_config.host_list|dict2items }}"

    - name: Create ssh keypair
      openssh_keypair:
        path: "id_rsa"

    # Basic deploy of a service
    - terraform:
        force_init: true
        project_path: "terraform/{{ item.key }}"
        variables:
          network_data: '{ hostIP = "{{ item.value.ip }}", broadcast= "{{ item.value.ip | ipsubnet(24) | ipaddr('broadcast') }}", dns = "{{ item.value.ip | ipsubnet(24) | ipaddr('net') | ipaddr('1') }}", gateway = "{{ item.value.ip | ipsubnet(24) | ipaddr('net') | ipaddr('1') }}", network = "{{ item.value.ip | ipsubnet(24) | ipaddr('net') }}" }'
          hostname: "{{ item.key }}"
        state: present
      register: output
      loop: "{{ initial_config.host_list|dict2items }}"

    - name: Show terraform output
      debug:
        var: output.results
    
    - name: Add host to multiple groups
      add_host:
        hostname: '{{ item.key }}'
        ansible_host: '{{ item.value.ip }}'
        ansible_ssh_private_key_file: "id_rsa"
        ansible_user: ocpinstall
        ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
        groups:
          - "{{ item.key }}"
      loop: "{{ initial_config.host_list|dict2items }}"

- name: Check connection, rename connection and set facts
  hosts: bastion,loadbalancer
  gather_facts: no
  become: true
  vars_files:
    - vars/vars.yml
  tasks:
    - name: Wait 600 seconds for target connection to become reachable/usable
      wait_for_connection: 
        timeout: 120
        delay: 0
    - ping:

    - setup:
      register: machine_facts

    - set_fact:
        host_ip: "{{ machine_facts.ansible_facts.ansible_default_ipv4.address }}"
        host_interface: "{{ machine_facts.ansible_facts.ansible_default_ipv4.interface }}"
        host_mac: "{{ machine_facts.ansible_facts.ansible_default_ipv4.macaddress }}"
        host_fqdn: "{{ machine_facts.ansible_facts.ansible_fqdn }}"
    
    - set_fact: 
        host_api_fqdn: "api.{{ initial_config.cluster_name }}.{{ initial_config.domain }}"
        host_api_int_fqdn: "api-int.{{ initial_config.cluster_name }}.{{ initial_config.domain }}"
        host_apps_fqdn: "apps.{{ initial_config.cluster_name }}.{{ initial_config.domain }}"  
      when inventory_hostname == 'loadbalancer'

    - name: Rename default connection
      command: nmcli con mod System\ eth0 connection.id {{ host_interface }}

